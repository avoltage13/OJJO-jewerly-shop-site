// REM
@function rem($value) {
    $remValue: calc($value / 16) + rem;
    @return $remValue;
}
// EM
@function em($value) {
    $emValue: calc($value / 16) + em;
    @return $emValue;
}
// REM+EM w/0 rem,em
@function rem-alt($value) {
    $rem0Value: calc($value / 16);
    @return $rem0Value;
}

// Adaptiv
$maxWidth: 1920;
$maxWidthContainer: 1110;
$maxWidthRem: 120;
$maxWidthContainerRem: 69.375;

@mixin av($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
    // Только если меньше контейнера
    #{$property}: $startSize + px;

    @media (max-width: #{$maxWidthContainer + px}) {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
    }
}

    @else if $type==2 {
    // Только если больше контейнера
    #{$property}: $startSize + px;

    @media (min-width: #{$maxWidthContainer + px}) {
    #{$property}: calc(#{$minSize + px} #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

    @else if $type==1r {
    // Только если меньше контейнера
    #{$property}: $startSize + rem;

    @media (max-width: #{$maxWidthContainer + px}) {
    #{$property}: calc(#{$minSize + rem} + #{$addSize} * ((100vw - 20rem) / #{$maxWidthContainerRem - 20}));
    }
}

    @else if $type==2r {
    // Только если больше контейнера
    #{$property}: $startSize + rem;

    @media (min-width: #{$maxWidthContainer + px}) {
    #{$property}: calc(#{$minSize + rem} #{$addSize} * ((100vw - 20rem) / #{$maxWidthRem - 20}));
    }
}

    @else {
    // Всегда
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}
/*______________HEADER STYLE______________*/
.header {
    background-color: transparent;
    z-index: 25;
}
.header__container {
    padding-top: 28px;
    width: 100%;
    // @include av(padding-bottom,522,293,1);
}
.header__logo-wrap {
    position: relative;
    margin: 0 auto;
}
.header__logo {
    position: absolute;
    top: -3px;
    left: 50%;
    transform: translateX(-50%);
    height: 52px;
    width: 220px;
    background: url(../img/icons/main-logo.svg) 50% no-repeat;
}
.header__content {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    font-size: rem(14);
    line-height: 1.5;
}
.icon-search::before {
    font-size: rem(19);
    position: absolute;
    display: flex;
    justify-content: start;
    width: 35px;
    height: 20px;
    left: -35px;
    top: 1px;
}
.content__left {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    order: 1;
    padding: 10px 0;
    max-width: rem(400);
    @include av(gap,40,0,1);
    align-items: center;
    animation: h-left 1s ease-in-out 500ms 1 normal forwards;
    opacity: 0;
}
@keyframes h-left {
	0% {
		opacity: 0;
        transform: translateX(-30px);
	}

	100% {
		opacity: 1;
        transform: translateX(0px);
	}
}
.header__items {
}
.header__item {
    position: relative;
}
.header__link {
    color: #ffffff;
}
.header__button {
    font-size: rem(14);
    line-height: 1.5;
    color: #ffffff;
}
.content__right {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    order: 2;
    padding: 10px 0;
    max-width: rem(400);
    @include av(gap,40,0,1);
    align-items: center;
    animation: h-right 1s ease-in-out 500ms 1 normal forwards;
    opacity: 0;
}
@keyframes h-right {
	0% {
		opacity: 0;
        transform: translateX(30px);
	}

	100% {
		opacity: 1;
        transform: translateX(0px);
	}
}
.header__user {
    margin-top: 3px;
    margin-right: -15px;
    width: 24px;
    height: 24px;
    background-color: transparent;
}
.icon-man::before {
    font-size: rem(22);
}
.header__favorites {
    margin-top: 3px;
    width: 18px;
    height: 18px;
    background-color: transparent;
}
.icon-heart::before {
    font-size: rem(14);
}
@media (max-width: 920px) {
    .header__logo {
        top: 9px;
        left: 18px;
        transform: translateX(0);
    }
    .header__container {
        padding-top: 22px;
    }
    .content__right, .content__left {
        display: none;
    }
}
@media (hover: hover) {
    .header__item {
        transition: all 300ms ease 0ms;
        &:hover {
            text-decoration: underline;
            color: #cccccc;
        }
        a:hover {
            text-decoration: underline;
            color: #cccccc;
        }
    }
    .header__button {
        &:hover {
            text-decoration: underline;
            color: #cccccc;
        }
    }
}
